
#Область ПрограммныйИнтерфейс
 
Функция НастройкиПодключенияПоСсылке(СсылкаНаОбъект) Экспорт
	
	Настройки = ШаблонНастроекПодключения();
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиОбменаСообщениями.Ссылка.Адрес КАК Адрес,
		|	НастройкиОбменаСообщениями.Ссылка.Порт КАК Порт,
		|	НастройкиОбменаСообщениями.Ссылка.Логин КАК Логин,
		|	НастройкиОбменаСообщениями.Ссылка.Пароль КАК Пароль,
		|	НастройкиОбменаСообщениями.Ссылка.ВиртуальныйХост КАК ВиртуальныйХост,
		|	НастройкиОбменаСообщениями.НастройкиПоТипам.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		ТипСтрокой КАК ТипСтрокой,
		|		ТочкаОбмена КАК ТочкаОбмена,
		|		КлючМаршрутизации КАК КлючМаршрутизации,
		|		ИмяОчереди КАК ИмяОчереди
		|	) КАК НастройкиПоТипам
		|ИЗ
		|	Справочник.НастройкиОбменаСообщениями КАК НастройкиОбменаСообщениями
		|ГДЕ
		|	НастройкиОбменаСообщениями.Ссылка = &Ссылка
		|	И НастройкиОбменаСообщениями.НастройкиПоТипам.ТипСтрокой = &ТипСтрокой
		|	И НастройкиОбменаСообщениями.НастройкиПоТипам.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Справочники.НастройкиОбменаСообщениями.Основной.Ссылка);
		Запрос.УстановитьПараметр("ТипСтрокой", СсылкаНаОбъект.Метаданные().Имя);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			ВыборкаДетальныеЗаписи.Следующий();
			
			ЗаполнитьЗначенияСвойств(Настройки, ВыборкаДетальныеЗаписи);
			
			ВыборкаПолучатели = ВыборкаДетальныеЗаписи.НастройкиПоТипам.Выбрать();
			
			Пока ВыборкаПолучатели.Следующий() Цикл 
				ШаблонНастроекПолучателей = ШаблонНастроекПолучателей();
				ЗаполнитьЗначенияСвойств(ШаблонНастроекПолучателей, ВыборкаПолучатели);
				Настройки.Получатели.Добавить(ШаблонНастроекПолучателей);		
			КонецЦикла;
					
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Функция НастройкиПодключенияПоПолномуИмени(ПолноеИмя) Экспорт
	
	Настройки = ШаблонНастроекПодключения();
	
	Если ЗначениеЗаполнено(ПолноеИмя) Тогда
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиОбменаСообщениями.Ссылка.Адрес КАК Адрес,
		|	НастройкиОбменаСообщениями.Ссылка.Порт КАК Порт,
		|	НастройкиОбменаСообщениями.Ссылка.Логин КАК Логин,
		|	НастройкиОбменаСообщениями.Ссылка.Пароль КАК Пароль,
		|	НастройкиОбменаСообщениями.Ссылка.ВиртуальныйХост КАК ВиртуальныйХост,
		|	НастройкиОбменаСообщениями.НастройкиПоТипам.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		ТипСтрокой КАК ТипСтрокой,
		|		ТочкаОбмена КАК ТочкаОбмена,
		|		КлючМаршрутизации КАК КлючМаршрутизации,
		|		ИмяОчереди КАК ИмяОчереди
		|	) КАК НастройкиПоТипам
		|ИЗ
		|	Справочник.НастройкиОбменаСообщениями КАК НастройкиОбменаСообщениями
		|ГДЕ
		|	НастройкиОбменаСообщениями.Ссылка = &Ссылка
		|	И НастройкиОбменаСообщениями.НастройкиПоТипам.ТипСтрокой = &ТипСтрокой
		|	И НастройкиОбменаСообщениями.НастройкиПоТипам.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Справочники.НастройкиОбменаСообщениями.Основной.Ссылка);
		Запрос.УстановитьПараметр("ТипСтрокой", ПолноеИмя);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			ВыборкаДетальныеЗаписи.Следующий();
			
			ЗаполнитьЗначенияСвойств(Настройки, ВыборкаДетальныеЗаписи);
			
			ВыборкаПолучатели = ВыборкаДетальныеЗаписи.НастройкиПоТипам.Выбрать();
			
			Пока ВыборкаПолучатели.Следующий() Цикл 
				ШаблонНастроекПолучателей = ШаблонНастроекПолучателей();
				ЗаполнитьЗначенияСвойств(ШаблонНастроекПолучателей, ВыборкаПолучатели);
				Настройки.Получатели.Добавить(ШаблонНастроекПолучателей);		
			КонецЦикла;
					
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Функция НастройкиПодключенияПоУмолчанию() Экспорт
	
	Настройки = ШаблонНастроекПодключения();
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиОбменаСообщениями.Адрес КАК Адрес,
	|	НастройкиОбменаСообщениями.Порт КАК Порт,
	|	НастройкиОбменаСообщениями.Логин КАК Логин,
	|	НастройкиОбменаСообщениями.Пароль КАК Пароль,
	|	НастройкиОбменаСообщениями.ВиртуальныйХост КАК ВиртуальныйХост,
	|	НастройкиОбменаСообщениями.ВходящиеОчереди.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ИмяОчереди КАК ИмяОчереди
	|	) КАК ОчередиДляОбработки,
	|	НастройкиОбменаСообщениями.НастройкиПоТипам.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ТипСтрокой КАК ТипСтрокой,
	|		ТочкаОбмена КАК ТочкаОбмена,
	|		КлючМаршрутизации КАК КлючМаршрутизации,
	|		ИмяОчереди КАК ИмяОчереди
	|	) КАК НастройкиПоТипам
	|ИЗ
	|	Справочник.НастройкиОбменаСообщениями КАК НастройкиОбменаСообщениями
	|ГДЕ
	|	НастройкиОбменаСообщениями.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Справочники.НастройкиОбменаСообщениями.Основной.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ВыборкаДетальныеЗаписи.Следующий();
		
		ЗаполнитьЗначенияСвойств(Настройки, ВыборкаДетальныеЗаписи);
		
		ВыборкаОчереди = ВыборкаДетальныеЗаписи.ОчередиДляОбработки.Выбрать();
		
		Пока ВыборкаОчереди.Следующий() Цикл
			Настройки.ВходящиеОчереди.Добавить(ВыборкаОчереди.ИмяОчереди);		
		КонецЦикла;
		
		ВыборкаПолучатели = ВыборкаДетальныеЗаписи.НастройкиПоТипам.Выбрать();
		
		Пока ВыборкаПолучатели.Следующий() Цикл 
			ШаблонНастроекПолучателей = ШаблонНастроекПолучателей();
			ЗаполнитьЗначенияСвойств(ШаблонНастроекПолучателей, ВыборкаПолучатели);
			Настройки.Получатели.Добавить(ШаблонНастроекПолучателей);		
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Функция ПолучитьКомпонентуСервер() Экспорт
	
	КлиентКомпоненты = Неопределено;
	Если Не ИнициализироватьКомпоненту(КлиентКомпоненты) Тогда
		
		МакетВнешнейКомпоненты    = Справочники.НастройкиОбменаСообщениями.ПолучитьМакет("ВнешняяКомпонента");
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(МакетВнешнейКомпоненты, Новый УникальныйИдентификатор);

		КомпонентаПодключена = ПодключитьВнешнююКомпоненту(
			АдресВоВременномХранилище,
			"BITERP",
			ТипВнешнейКомпоненты.Native);
		КлиентКомпоненты  = Новый("AddIn.BITERP.PinkRabbitMQ");
		
	КонецЕсли;
	
	Возврат КлиентКомпоненты;
КонецФункции 

Функция ИспользуемыеВОбменеТипы() Экспорт
	
	Типы = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиОбменаСообщениямиНастройкиПоТипам.ТипСтрокой КАК ТипСтрокой
	|ИЗ
	|	Справочник.НастройкиОбменаСообщениями.НастройкиПоТипам КАК НастройкиОбменаСообщениямиНастройкиПоТипам
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиОбменаСообщениямиНастройкиПоТипам.ТипСтрокой";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Типы.Добавить(ВыборкаДетальныеЗаписи.ТипСтрокой);	
	КонецЦикла;
		
	Возврат Типы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ШаблонНастроекПодключения()
	
	Получатели = Новый Массив;
		
	Настройки = Новый Структура();
	Настройки.Вставить("Адрес");
	Настройки.Вставить("Порт");
	Настройки.Вставить("Логин");
    Настройки.Вставить("Пароль");
	Настройки.Вставить("ВиртуальныйХост");
	Настройки.Вставить("Получатели", Получатели);
	Настройки.Вставить("ВходящиеОчереди", Новый Массив);

	Возврат Настройки;
	
КонецФункции 

Функция ШаблонНастроекПолучателей()
	
	Настройки = Новый Структура();
	Настройки.Вставить("ТочкаОбмена"); 
	Настройки.Вставить("КлючМаршрутизации");
	Настройки.Вставить("ИмяОчереди");

	Возврат Настройки;
	
КонецФункции

Функция ИнициализироватьКомпоненту(Компонента)
	
	Попытка
		Компонента  = Новый("AddIn.BITERP.PinkRabbitMQ");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

